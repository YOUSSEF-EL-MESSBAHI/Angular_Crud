{"ast":null,"code":"import { finalize } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app-state.service\";\nimport * as i2 from \"./loading.service\";\nexport let AppHttpInterceptor = /*#__PURE__*/(() => {\n  class AppHttpInterceptor {\n    constructor(appState, loadingService) {\n      this.appState = appState;\n      this.loadingService = loadingService;\n    }\n    intercept(request, next) {\n      /*\r\n      this.appState.setProductState({\r\n        status :\"LOADING\"\r\n      })*/\n      this.loadingService.showLoadingSpinner();\n      let req = request.clone({\n        headers: request.headers.set(\"Authorization\", \"Bearer JWT\")\n      });\n      return next.handle(req).pipe(finalize(() => {\n        //this.appState.setProductState({\n        //status :\"\"\n        //})\n        this.loadingService.hideLoadingSpinner();\n      }));\n    }\n  }\n  AppHttpInterceptor.ɵfac = function AppHttpInterceptor_Factory(t) {\n    return new (t || AppHttpInterceptor)(i0.ɵɵinject(i1.AppStateService), i0.ɵɵinject(i2.LoadingService));\n  };\n  AppHttpInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppHttpInterceptor,\n    factory: AppHttpInterceptor.ɵfac\n  });\n  return AppHttpInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}