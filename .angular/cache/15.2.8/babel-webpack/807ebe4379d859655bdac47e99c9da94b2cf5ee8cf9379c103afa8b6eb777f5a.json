{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/LENOVO/Desktop/Angular-All in one/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from \"rxjs\";\nimport jwtDecode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./app-state.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, appState) {\n      this.http = http;\n      this.appState = appState;\n    }\n    login(username, password) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let user = yield firstValueFrom(_this.http.get(\"http://localhost:8089/users/\" + username));\n        //console.log(password);\n        //console.log(user.password);\n        //console.log(atob(user.password));\n        if (password == atob(user.password)) {\n          let decodedJwt = jwtDecode(user.token);\n          _this.appState.setAuthState({\n            isAuthenticated: true,\n            username: decodedJwt.sub,\n            roles: decodedJwt.roles,\n            token: user.token\n          });\n          return Promise.resolve(true);\n        } else {\n          return Promise.reject(\"Bad credentials\");\n        }\n      })();\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppStateService));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}