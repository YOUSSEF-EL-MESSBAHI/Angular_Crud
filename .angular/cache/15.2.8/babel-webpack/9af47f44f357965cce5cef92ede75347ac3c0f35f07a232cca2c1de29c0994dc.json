{"ast":null,"code":"import { finalize } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app-state.service\";\nimport * as i2 from \"./loading.service\";\nexport class AppHttpInterceptor {\n  constructor(appState, loadingService) {\n    this.appState = appState;\n    this.loadingService = loadingService;\n  }\n  intercept(request, next) {\n    /*\r\n    this.appState.setProductState({\r\n      status :\"LOADING\"\r\n    })*/\n    this.loadingService.showLoadingSpinner();\n    let req = request.clone({\n      headers: request.headers.set(\"Authorization\", \"Bearer JWT\")\n    });\n    return next.handle(req).pipe(finalize(() => {\n      //this.appState.setProductState({\n      //status :\"\"\n      //})\n      this.loadingService.hideLoadingSpinner();\n    }));\n  }\n}\nAppHttpInterceptor.ɵfac = function AppHttpInterceptor_Factory(t) {\n  return new (t || AppHttpInterceptor)(i0.ɵɵinject(i1.AppStateService), i0.ɵɵinject(i2.LoadingService));\n};\nAppHttpInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppHttpInterceptor,\n  factory: AppHttpInterceptor.ɵfac\n});","map":{"version":3,"mappings":"AAOA,SAAoBA,QAAQ,QAAmB,MAAM;;;;AAKrD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,QAA0B,EAC1BC,cAA6B;IAD7B,aAAQ,GAARD,QAAQ;IACR,mBAAc,GAAdC,cAAc;EAAkB;EAEpDC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD;;;;IAIA,IAAI,CAACH,cAAc,CAACI,kBAAkB,EAAE;IACxC,IAAIC,GAAG,GAAGH,OAAO,CAACI,KAAK,CAAC;MACtBC,OAAO,EAAGL,OAAO,CAACK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,YAAY;KAC3D,CAAC;IACF,OAAOL,IAAI,CAACM,MAAM,CAACJ,GAAG,CAAC,CAACK,IAAI,CAC1Bd,QAAQ,CAAC,MAAI;MACX;MACE;MACF;MACA,IAAI,CAACI,cAAc,CAACW,kBAAkB,EAAE;IAC1C,CAAC,CAAC,CACH;EACH;;AAtBWd,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAe,SAAlBf,kBAAkB;AAAA","names":["finalize","AppHttpInterceptor","constructor","appState","loadingService","intercept","request","next","showLoadingSpinner","req","clone","headers","set","handle","pipe","hideLoadingSpinner","factory"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\Angular-All in one\\src\\app\\services\\app-http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {catchError, finalize, Observable} from 'rxjs';\nimport {AppStateService} from \"./app-state.service\";\nimport {LoadingService} from \"./loading.service\";\n\n@Injectable()\nexport class AppHttpInterceptor implements HttpInterceptor {\n\n  constructor(private appState : AppStateService,\n              private loadingService:LoadingService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    /*\n    this.appState.setProductState({\n      status :\"LOADING\"\n    })*/\n    this.loadingService.showLoadingSpinner();\n    let req = request.clone({\n      headers : request.headers.set(\"Authorization\",\"Bearer JWT\")\n    });\n    return next.handle(req).pipe(\n      finalize(()=>{\n        //this.appState.setProductState({\n          //status :\"\"\n        //})\n        this.loadingService.hideLoadingSpinner();\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}