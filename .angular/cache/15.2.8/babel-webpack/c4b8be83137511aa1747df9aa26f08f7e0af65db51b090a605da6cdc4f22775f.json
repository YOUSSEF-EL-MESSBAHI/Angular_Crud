{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction EditProductComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function EditProductComponent_div_4_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateProduct());\n    });\n    i0.ɵɵelementStart(2, \"div\", 6)(3, \"label\", 7);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n    i0.ɵɵtext(12, \"Checked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 11);\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.productFormGroup);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.productFormGroup.invalid);\n  }\n}\nexport class EditProductComponent {\n  constructor(activatedRoute, productService, fb) {\n    this.activatedRoute = activatedRoute;\n    this.productService = productService;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.productId = this.activatedRoute.snapshot.params['id'];\n    this.productService.getProductById(this.productId).subscribe({\n      next: product => {\n        this.productFormGroup = this.fb.group({\n          id: this.fb.control(product.id),\n          name: this.fb.control(product.name, [Validators.required]),\n          price: this.fb.control(product.price, [Validators.min(100)]),\n          checked: this.fb.control(product.checked)\n        });\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  updateProduct() {\n    let product = this.productFormGroup.value;\n    this.productService.updateProduct(product).subscribe({\n      next: data => {\n        alert(JSON.stringify(data));\n      }\n    });\n  }\n}\nEditProductComponent.ɵfac = function EditProductComponent_Factory(t) {\n  return new (t || EditProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nEditProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditProductComponent,\n  selectors: [[\"app-edit-product\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"p-3\"], [1, \"card\"], [1, \"card-header\"], [\"class\", \"card-body\", 4, \"ngIf\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"name\", 1, \"form-control\"], [\"formControlName\", \"price\", 1, \"form-control\"], [\"type\", \"checkbox\", \"formControlName\", \"checked\", 1, \"form-check-input\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n  template: function EditProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, EditProductComponent_div_4_Template, 16, 2, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Product ID = \", ctx.productId, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.productFormGroup);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAAgCA,UAAU,QAAO,gBAAgB;;;;;;;;;ICC7DC,8BAAgD;IACTA;MAAAA;MAAA;MAAA,OAAYA,qCAAe;IAAA,EAAC;IAC/DA,8BAAkB;IACUA,oBAAI;IAAAA,iBAAQ;IACtCA,2BAAmD;IACrDA,iBAAM;IACNA,8BAAkB;IACUA,qBAAK;IAAAA,iBAAQ;IACvCA,2BAAoD;IACtDA,iBAAM;IACNA,+BAAkB;IACUA,wBAAO;IAAAA,iBAAQ;IACzCA,6BAA0E;IAC5EA,iBAAM;IACNA,mCAAsE;IAAAA,qBAAI;IAAAA,iBAAS;;;;IAb/EA,eAA8B;IAA9BA,mDAA8B;IAa1BA,gBAAqC;IAArCA,0DAAqC;;;ADPrD,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,cAA+B,EAC/BC,cAA8B,EAC9BC,EAAgB;IAFhB,mBAAc,GAAdF,cAAc;IACd,mBAAc,GAAdC,cAAc;IACd,OAAE,GAAFC,EAAE;EACtB;EACAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACxD,IAAI,CAACL,cAAc,CAACM,cAAc,CAAC,IAAI,CAACH,SAAS,CAAC,CAACI,SAAS,CAAC;MAC3DC,IAAI,EAAIC,OAAO,IAAG;QAChB,IAAI,CAACC,gBAAgB,GAAC,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC;UAClCC,EAAE,EAAG,IAAI,CAACX,EAAE,CAACY,OAAO,CAACJ,OAAO,CAACG,EAAE,CAAC;UAChCE,IAAI,EAAG,IAAI,CAACb,EAAE,CAACY,OAAO,CAACJ,OAAO,CAACK,IAAI,EAAE,CAACnB,UAAU,CAACoB,QAAQ,CAAC,CAAC;UAC3DC,KAAK,EAAG,IAAI,CAACf,EAAE,CAACY,OAAO,CAACJ,OAAO,CAACO,KAAK,EAAE,CAACrB,UAAU,CAACsB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;UAC7DC,OAAO,EAAG,IAAI,CAACjB,EAAE,CAACY,OAAO,CAACJ,OAAO,CAACS,OAAO;SAC1C,CAAC;MACJ,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;EAEAG,aAAa;IACX,IAAIb,OAAO,GAAY,IAAI,CAACC,gBAAgB,CAACa,KAAK;IAClD,IAAI,CAACvB,cAAc,CAACsB,aAAa,CAACb,OAAO,CAAC,CAACF,SAAS,CAAC;MACnDC,IAAI,EAAGgB,IAAI,IAAE;QACXC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;MAC7B;KACD,CAAC;EACJ;;AA/BW3B,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZjCpC,8BAAiB;MAGXA,YACF;MAAAA,iBAAM;MACNA,sEAgBM;MACRA,iBAAM;;;MAnBFA,eACF;MADEA,2DACF;MACwBA,eAAsB;MAAtBA,2CAAsB","names":["Validators","i0","EditProductComponent","constructor","activatedRoute","productService","fb","ngOnInit","productId","snapshot","params","getProductById","subscribe","next","product","productFormGroup","group","id","control","name","required","price","min","checked","error","console","log","updateProduct","value","data","alert","JSON","stringify","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\Angular-All in one\\src\\app\\edit-product\\edit-product.component.ts","C:\\Users\\LENOVO\\Desktop\\Angular-All in one\\src\\app\\edit-product\\edit-product.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ProductService} from \"../services/product.service\";\n\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Product} from \"../model/product.model\";\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit{\n  productId! :number;\n  productFormGroup! : FormGroup;\n  constructor(private activatedRoute : ActivatedRoute,\n              private productService: ProductService,\n              private fb : FormBuilder) {\n  }\n  ngOnInit() {\n    this.productId=this.activatedRoute.snapshot.params['id'];\n    this.productService.getProductById(this.productId).subscribe({\n      next : (product)=>{\n        this.productFormGroup=this.fb.group({\n          id : this.fb.control(product.id),\n          name : this.fb.control(product.name, [Validators.required]),\n          price : this.fb.control(product.price, [Validators.min(100)]),\n          checked : this.fb.control(product.checked)\n        });\n      },\n      error :error =>{\n        console.log(error);\n      }\n    });\n  }\n\n  updateProduct() {\n    let product : Product =this.productFormGroup.value;\n    this.productService.updateProduct(product).subscribe({\n      next : data=>{\n        alert(JSON.stringify(data));\n      }\n    })\n  }\n}\n","<div class=\"p-3\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Product ID = {{productId}}\n    </div>\n    <div class=\"card-body\" *ngIf=\"productFormGroup\">\n      <form [formGroup]=\"productFormGroup\" (ngSubmit)=\"updateProduct()\">\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Name</label>\n          <input class=\"form-control\" formControlName=\"name\">\n        </div>\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Price</label>\n          <input class=\"form-control\" formControlName=\"price\">\n        </div>\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Checked</label>\n          <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"checked\">\n        </div>\n        <button [disabled]=\"productFormGroup.invalid\" class=\"btn btn-success\">Save</button>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}