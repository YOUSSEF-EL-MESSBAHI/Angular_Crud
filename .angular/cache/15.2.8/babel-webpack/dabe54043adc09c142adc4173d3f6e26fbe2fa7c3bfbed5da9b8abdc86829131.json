{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction EditProductComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function EditProductComponent_div_4_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateProduct());\n    });\n    i0.ɵɵelementStart(2, \"div\", 6)(3, \"label\", 7);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n    i0.ɵɵtext(12, \"Checked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 11);\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.productFormGroup);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.productFormGroup.invalid);\n  }\n}\nexport let EditProductComponent = /*#__PURE__*/(() => {\n  class EditProductComponent {\n    constructor(activatedRoute, productService, fb) {\n      this.activatedRoute = activatedRoute;\n      this.productService = productService;\n      this.fb = fb;\n    }\n    ngOnInit() {\n      this.productId = this.activatedRoute.snapshot.params['id'];\n      this.productService.getProductById(this.productId).subscribe({\n        next: product => {\n          this.productFormGroup = this.fb.group({\n            id: this.fb.control(product.id),\n            name: this.fb.control(product.name, [Validators.required]),\n            price: this.fb.control(product.price, [Validators.min(100)]),\n            checked: this.fb.control(product.checked)\n          });\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n    updateProduct() {\n      let product = this.productFormGroup.value;\n      this.productService.updateProduct(product).subscribe({\n        next: data => {\n          alert(JSON.stringify(data));\n        }\n      });\n    }\n  }\n  EditProductComponent.ɵfac = function EditProductComponent_Factory(t) {\n    return new (t || EditProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  EditProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditProductComponent,\n    selectors: [[\"app-edit-product\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"p-3\"], [1, \"card\"], [1, \"card-header\"], [\"class\", \"card-body\", 4, \"ngIf\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"name\", 1, \"form-control\"], [\"formControlName\", \"price\", 1, \"form-control\"], [\"type\", \"checkbox\", \"formControlName\", \"checked\", 1, \"form-check-input\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function EditProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, EditProductComponent_div_4_Template, 16, 2, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Product ID = \", ctx.productId, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.productFormGroup);\n      }\n    },\n    dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return EditProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}